"use strict";var board,resetButton=document.querySelector(".reset"),playerO="O",playerX="X",currPlayer=playerO,gameOver=!1;function creatingGame(){board=[[" "," "," "],[" "," "," "],[" "," "," "]];for(var e=0;e<3;e++)for(var r=0;r<3;r++){var a=document.createElement("div");a.id=e.toString()+"-"+r.toString(),a.classList.add("area"),0!=e&&1!=e||a.classList.add("horizontal-line"),0!=r&&1!=r||a.classList.add("vertical-line"),a.addEventListener("click",setNewArea),document.getElementById("board").appendChild(a)}}function setNewArea(){var e,r;gameOver||(r=this.id.split("-"),e=parseInt(r[0]),r=parseInt(r[1])," "==board[e][r]&&(board[e][r]=currPlayer,currPlayer=(this.innerText=currPlayer)==playerO?playerX:playerO,checkWinner()))}function checkWinner(){for(var e=0;e<3;e++)if(board[e][0]==board[e][1]&&board[e][1]==board[e][2]&&" "!=board[e][0]){for(var r=0;r<3;r++)document.getElementById(e.toString()+"-"+r.toString()).classList.add("winner");return void(gameOver=!0)}for(var a=0;a<3;a++)if(board[0][a]==board[1][a]&&board[1][a]==board[2][a]&&" "!=board[0][a]){for(var t=0;t<3;t++)document.getElementById(t.toString()+"-"+a.toString()).classList.add("winner");return void(gameOver=!0)}if(board[0][0]==board[1][1]&&board[1][1]==board[2][2]&&" "!=board[0][0]){for(var d=0;d<3;d++)document.getElementById(d.toString()+"-"+d.toString()).classList.add("winner");gameOver=!0}else board[0][2]==board[1][1]&&board[1][1]==board[2][0]&&" "!=board[0][2]&&(document.getElementById("0-2").classList.add("winner"),document.getElementById("1-1").classList.add("winner"),document.getElementById("2-0").classList.add("winner"),gameOver=!0)}window.onload=function(){creatingGame()},resetButton.addEventListener("click",function(){document.location.reload(!0)});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
